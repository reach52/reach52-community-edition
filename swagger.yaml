swagger: "2.0"
info:
  description: "This is a sample Unicef server."
  version: "1.0.0"
  title: "Unicef"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: ""
basePath: "/"
tags:
- name: "Medications"
  description: "Medication apis"
- name: "Orders"
  description: "Orders apis"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"

schemes:
- "http"
- "https"
paths:
  /api/view/files:
    get:
      tags:
      - "Medications"
      summary: "Medication file list"
      description: "This api will give all catalougue file list"
      operationId: "fetchMedications"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        "200":
           description: "Invalid input"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "Files found!!"
               data:
                 type: "array"
                 items:
                   $ref: "#/definitions/Cataloguefile"
        "500":
           description: "Invalid input"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "Files not found!!"
               data:
                 type: "array"
                 items:
                   type: string
                   example: null

  /api/view/allsuppliers:
    get:
      tags:
      - "Suppliers"
      summary: "All suppliers list"
      description: "This api will give all suppliers list"
      operationId: "fetchSuppliers"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: true
              message:
                type: "string"
                example: "Supplier found!!"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Supplier"
        "500":
          description: "Invalid input"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "Supplier not found!!"
              data:
                type: "array"
                items:
                  type: string
                  example: 
         
               
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"
   
# securityDefinitions:
#   petstore_auth:
#     type: "oauth2"
#     authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
#     flow: "implicit"
#     scopes:
#       write:pets: "modify pets in your account"
#       read:pets: "read your pets"
#   api_key:
#     type: "apiKey"
#     name: "api_key"
#     in: "header"

      
  /api/add/supplier:
    post:
      tags:
      - "Suppliers"
      summary: "Creates list of supplier with given input"
      description: ""
      operationId: "addSupplier"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Supplier object that needs to be added to the database"
        required: true
        schema:
          type: "object"
          properties:
            _partition: 
               type: "string"
               example: "101"
            userId:
              type: "string"
              #format: "objectId"
              example: "6048708c946251d02c88f329"
            addressLine1:
              type: "string"
              example: "PUNE"
            addressLine2:
              type: "string"
              example: "BANNER"
            city:
              type: "string"
              example: "PUNE"
            country:
              type: "string"
              example: "INDIA"
            isoCountry:
              type: "string"
              example: "phl"
            district:
              type: "string"
              example: "PUNE"
            postalCode:
              type: "string"
              example: "784512"
            directions:
              type: "string"
              example: "WEST"
            landmark:
              type: "string"
              example: "NEW GALAXY MALL"
            region:
              type: "string"
              example: "EAST"
            town:
              type: "string"
              example: "PUNE"
            zip:
              type: "string"
              example: "PUNE"
            email:
              type: "string"
              example: "email@gmail.com"
            phone:
              type: "string"
              example: "9999999999"
            supplierCode:
              type: "string"
              required: true
              example: "ALKEM"
            deliveryFee:
              type: "integer"
              format: "decimal"
              example: 100.00
            isoCountry:
              type: "string"
              example: "phl"
            lastProductSeq:
              type: "string"
              example: "45A"
            supplierName:
              type: "string"
              example: "ALKEM"
            catalogTags:
              type: "array"
              xml:
                name: "tag"
                wrapped: true
              items:
                type: "string"
            usdPrice:
              type: "integer"
              format: "decimal"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: true
              message:
                type: "string"
                example: "Supplier added successfully"
              supplierId:
                type: "string"
                example: "6048708c946251d02c88f329"
        "500":
          description: "Invalid input"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "Supplier code already exists!!"
              supplierId:
                type: "string"
                example: "null"
        "400":
          description: "parameter is missing"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "supplierCode parameter is missing"
         



           
  /api/view/singlesupplier/{supplierCode}:
    get:
      tags:
      - "Suppliers"
      summary: "Find single supplier by supplier code"
      description: ""
      operationId: "getsSupplierByCode"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "supplierCode"
        in: "path"
        description: "Code of supplier that needs to be fetched"
        required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: true
              message:
                type: "string"
                example: "Supplier found!!"
              data:
                $ref: "#/definitions/Supplier"
        "500":
          description: "Invalid input"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "Supplier not found!!"
              data:
                type: "object"
        "400":
          description: "parameter is missing"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "supplierCode parameter is missing"
                



  /api/processorder:
    post:
      tags:
      - "Orders"
      summary: "Process order for point calculation"
      description: ""
      operationId: "processOrder"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "object"
          properties:
            orderId:
              type: "string"
              example: "605059f391ad10274d40f663"
            redeemedPoints:
              type: "number"
              example: 50
            countryCode:
              type: "string"
              example: "IND"
            pointSource:
              type: "string"
              example: "Online"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: true
              message:
                type: "string"
                example: "Order processed successfully!!"
              discountAmount:
                type: "integer"
                example: 50
              finalPrice:
                type: "integer"
                example: 500
              totalEarnedPoints:
                type: "integer"
                example: 5
        "500":
          description: "Invalid input"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "Error in order processing!!"
              discountAmount:
                type: "integer"
                example: 0
              finalPrice:
                type: "integer"
                example: 0
              totalEarnedPoints:
                type: "integer"
                example: 0
        "400":
          description: "parameter is missing"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "countryCode parameter is missing"
             




  /api/pointsupdate:
    post:
      tags:
      - "Orders"
      summary: "Points update "
      description: ""
      operationId: "pointsUpdate"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "object"
          properties:
            orderId:
              type: "string"
              example: "605059f391ad10274d40f663"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: true
              message:
                type: "string"
                example: "Point updated successfully!!"
             
        "500":
          description: "Invalid input"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "Error in point updation processing!!"
             
        "400":
          description: "parameter is missing"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
                example: false
              message:
                type: "string"
                example: "orderId parameter is missing"
             

  /api/pointconversion:
    post:
      tags:
      - "Points"
      summary: "Points conversion "
      description: ""
      operationId: "pointsConversion"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "object"
          properties:
            countryCode:
              type: "string"
              example: "IND"
            residentId:
              type: "string"
              example: "605059f391ad10274d40f663"
            redeemPoints:
              type: "integer"
              example: "75"
      responses:
         "200":
           description: "successful operation"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: true
               message:
                 type: "string"
                 example: "Point conversion successfully done!!"
               currencyValue:
                 type: "string"
                 example: "114.50"
               currency: 
                 type: "string"
                 example: "INR"
             
         "500":
           description: "Invalid input"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "Error in point conversion!!"
               currencyValue:
                 type: "string"
                 example: "0.00"
               currency: 
                 type: "string"
                 example: "INR"
             
         "400":
           description: "parameter is missing"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "residentId parameter is missing"
             




  /api/redeemdetails:
    post:
      tags:
      - "Points"
      summary: "Points redeemtion "
      description: ""
      operationId: "pointsRedeemtion"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "object"
          properties:
            residentId:
              type: "string"
              example: "605059f391ad10274d40f663"
            redeemedPoints:
              type: "number"
              example: 50
      responses:
         "200":
           description: "successful operation"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: true
               message:
                 type: "string"
                 example: "User has available redeempoints"
         "500":
           description: "Invalid input"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "Sorry, You don't have availablepoints to redeem"
         "400":
           description: "parameter is missing"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "residentId parameter is missing"

  /api/user/transactiondetails/{residentId}:
    get:
      tags:
      - "Points"
      summary: "Points transaction details "
      description: ""
      operationId: "pointsTransaction"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "residentId"
        in: "path"
        description: "Resident id required"
        required: true
      responses:
         "200":
           description: "successful operation"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: true
               message:
                 type: "string"
                 example: "User transaction details"
               data:
                 type: "array"
                 items:
                   $ref: "#/definitions/PointsAudit"
         "500":
           description: "Invalid input"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "Sorry, You don't have transaction details"
               data:
                 type: "array"
                 items:
                   type: object
                   example: null
         "400":
           description: "parameter is missing"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "residentId parameter is missing"


  /api/user/points/{residentId}:
    get:
      tags:
      - "Points"
      summary: "Points details "
      description: ""
      operationId: "pointsDetails"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "residentId"
        in: "path"
        description: "Resident id required"
        required: true
      responses:
         "200":
           description: "successful operation"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: true
               message:
                 type: "string"
                 example: "User points details available"
               data:
                 type: "object"
                 example: { "totalLapsedPoints":"100","totalAvailablePoints":"500","totalEarnedPoints":"50","totalRedeemedPoints":"20"}
         "500":
           description: "Invalid input"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "Sorry,User has no point"
               data:
                 type: "object"
                 example: null
                 
         "400":
           description: "parameter is missing"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "residentId parameter is missing"



  /api/upload/medications:
    post:
      tags:
      - "Medications"
      summary: "uploads catalougue file"
      description: ""
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "userId"
        in: "formData"
        description: "ID of User"
        required: true
        type: "string"
        example: "6048708c946251d02c88f329"
      - name: "supplierCode"
        in: "formData"
        description: "supplierCode"
        example: "ALKEM"
        required: true
        type: "string"
      - name: "supplierName"
        in: "formData"
        description: "supplierName"
        example: "ALKEM"
        required: true
        type: "string"
      - name: "isoCountryCode"
        in: "formData"
        description: "isoCountryCode"
        required: true
        type: "string"
        example: "IND"
      - name: "file"
        in: "formData"
        description: "file to upload"
        required: true
        type: "file"
      responses:
         "200":
           description: "successful operation"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: true
               message:
                 type: "string"
                 example: "Data Inserted Successfully"
               invalidRowsCount:
                 type: "integer"
                 example: 25
               validRowsCount:
                 type: "integer"
                 example: 50
               totalRowsCount:
                 type: "integer"
                 example: 100
               duplicateEntryCount:
                 type: "integer"
                 example: 25
         "500":
           description: "Invalid input"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "Error in data insert process"
               invalidRowsCount:
                 type: "integer"
                 example: 0
               validRowsCount:
                 type: "integer"
                 example: 0
               totalRowsCount:
                 type: "integer"
                 example: 0
               duplicateEntryCount:
                 type: "integer"
                 example: 0
                 
         "400":
           description: "parameter is missing"
           schema:
             type: "object"
             properties:
               status:
                 type: "boolean"
                 example: false
               message:
                 type: "string"
                 example: "supplierCode parameter is missing"



# schemas
definitions:
  Cataloguefile:
    type: "object"
    properties:
      _id:
        type: "integer"
        format: "ObjectId"
      fileName:
        type: "string"
       
      userId:
        type: "string"
       
      supplierCode:
        type: "string"
      successedRecordsCount:
        type: "integer"
        format: "int32"
      duplicateRecordsCount:
        type: "integer"
        format: "int32"
      failedRecordsCount:
        type: "integer"
        format: "int32"
      totalRecordsCount:
        type: "integer"
        format: "int32"
      status:
        type: "boolean"
        default: false
      isoCountryCode:
         type: "string"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
    xml:
      name: "Cataloguefile"

  PointsAudit:
    type: "object"
    properties:
      residentId:
        type: "string"
        example: "6048708c946251d02c88f329"
      orderId:
        type: "string"
        example: "6048708c946251d02c88f329"
      redeemedPoints:
        type: "integer"
        format: "int32"
        example: 100
      earnedPoints:
        type: "integer"
        format: "int32"
        example: 25
      availablePoints:
        type: "integer"
        format: "int32"
        example: 125
      isActive:
        type: "boolean"
        default: false
      isLapsed:
        type: "boolean"
        default: false
      pointSource:
        type: "string"
        example: "online"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
    xml:
      name: "PointsAudit"


  


  Supplier:
    type: "object"
    properties:
      _partition: 
        type: "string"
        example: "101"
      userId:
        type: "string"
        #format: "objectId"
        example: "6048708c946251d02c88f329"
      contact: 
        type: "object"
        properties:
          address: 
            type:
            properties:
                addressLine1:
                  type: "string"
                  example: "PUNE"
                addressLine2:
                  type: "string"
                  example: "BANNER"
                city:
                  type: "string"
                  example: "PUNE"
                country:
                  type: "string"
                  example: "INDIA"
                isoCountry:
                  type: "string"
                  example: "phl"
                district:
                  type: "string"
                  example: "PUNE"
                postalCode:
                  type: "string"
                  example: "784512"
                directions:
                  type: "string"
                  example: "WEST"
                landmark:
                  type: "string"
                  example: "NEW GALAXY MALL"
                region:
                  type: "string"
                  example: "EAST"
                town:
                  type: "string"
                  example: "PUNE"
                zip:
                  type: "string"
                  example: "PUNE"            
          email:
            type: "string"
            example: "email@gmail.com"
          phone:
            type: "string"
            example: "9999999999"
      supplierCode:
        type: "string"
        required: true
        example: "ALKEM"
      deliveryFee:
        type: "integer"
        format: "decimal"
        example: 100.00
      isoCountry:
        type: "string"
        example: "phl"
      lastProductSeq:
        type: "string"
        example: "45A"
      supplierName:
        type: "string"
        example: "ALKEM"
      catalogTags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          type: "string"
      usdPrice:
         type: "integer"
         format: "decimal"
    xml:
      name: "Supplier"

  Order:
    type: "object"
    properties:
      userId:
        type: "string"
        example: "605059f391ad10274d40f663"
      delivery:
        type: "number"
      discount:
        type: "object"
      discountIdNumber:
        type: "number"
      isoCountry:
        type: "string"
      isoCurrency:
        type: "string"
      orderSubTotal:
        type: "integer"
        format: "decimal"
      orderTotalPayable:
        type: "integer"
        format: "decimal"
      pointBasedDiscountedAmount:
        type: "integer"
        format: "decimal"
      canRedeemPoints:
        type: "boolean"
        default: false
      isPointsAddedToResident:
        type: "boolean"
        default: false
      isEarnedPointCalculated:
        type: "boolean"
        default: false
      patientAge:
        type: "number"
       
      patientAddress:
        type: "object"
        example: { eng:"abcd"}
      patientGender:
        type: "string"
      patientName:
        type: "string"
      prescriptionNumber:
        type: "string"
      recipient:
        type: "string"
      residentId:
        type: "string"
      currentStatus:
        type: "object"
        example: { eng:"abcd"}
      supplierOrderId:
        type: "string"
      orderStatus:
        type: "string"
      subOrders:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          type: "string"
      usdPrice:
         type: "integer"
         format: "decimal"
      taxPayable:
        type: "number"
      trackingCode:
        type: "string"
      type:
        type: "string"
      residentId:
        type: "string"
      productDetails:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          type: "string"
      deliveryAddress:
        type: "string"
      isDelivered:
        type: "boolean"
        default: false
      date:
        type: "date-time"
      
    xml:
      name: "Order"



  Resident:
    type: "object"
    properties:
      _partition:
        type: "string"
        default: "101"
      firstName:
        type: "string"
      middleName:
        type: "string"
      lastName:
         type: "string"
      email:
        type: "string"
      phoneNumber:
        type: "string"
      gender:
        type: "string"
      birthDate:
        type: "string"
      maritalStatus:
        type: "string"
      age:
        type: "string"
      quesJson:
        type: "string"
      createdDate:
        type: "string"
        format: "date-time"
      updatedDate:
        type: "string"
        format: "date-time"
      createdBy:
        type: "string"
      createdById:
        type: "string"
      updatedBy:
        type: "string"
      isSelected:
        type: "boolean"
        default: false
      address: 
        type: "object"
        properties:
          location:
            type: "string"
            example: ""
          region:
            type: "string"
            example: ""
          country:
            type: "string"
            example: ""
          city:
            type: "string"
            example: ""
          postal_code:
            type: "string"
            example: ""

          landmark:
            type: "string"
            example: ""
          isoCountry:
            type: "string"
            example: ""
          zip:
            type: "string"
            example: ""
          directions:
            type: "string"
            example: ""
          addressLine1:
            type: "string"
            example: ""
          addressLine2:
            type: "string"
            example: ""
          district:
            type: "string"
            example: ""
          town:
            type: "string"
            example: ""
      ques:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          type: "string"
      availablePoints:
        type: "integer"
        format: "int32"
      createdBy:
        type: "object"
        properties:
          userId:
            type: "string"
            example: "605059f391ad10274d40f663"
          utcDatetime:
            type: "string"
            format: "date-time"
      metadata:
        type: "object"
        properties:
          createdBy:
            type: "object"
            properties:
              userId:
                type: "string"
                example: "605059f391ad10274d40f663"
              utcDatetime:
                type: "string"
                format: "date-time"
          updatedBy:
            type: "string"
            example: "605059f391ad10274d40f663"
          version:
            type: "string"
            example: "1"
    xml:
      name: "Resident"

  
  Medication:
    type: "object"
    properties:
      _partition:
        type: "string"
        default: "101"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          type: "string"
      isoCountry:
        type: "string"
      isoCurrency:
         type: "string"
      manufacturer:
        type: "string"
      packUnit:
        type: "string"
      stock:
        type: "object"
        properties:
          qty:
            type: "integer"
            example: 5
      supplierCode:
        type: "string"
      manufacturerName:
        type: "string"
      packSizeUnit:
        type: "string"
      requireRx:
        type: "string"
        default: "No"
      pricePerPack:
        type: "integer"
        format: "decimal"
      price:
        type: "integer"
        format: "decimal"
      pointsAccumulation:
        type: "boolean"
        default: false
      barCode:
        type: "string"
      brandName:
        type: "object"
        example: {"eng":"ALKEM"}
      catalogTags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          type: "string"
      description:
        type: "object"
        example: {}
      dosage: 
        type: "string"
      form:
        type: "object"
        example: {}
      genericName:
        type: "object"
        example: {}
      handlingInstr:
        type: "object"
        example: {}
      information:
        type: "object"
        example: {}
      ingredients:
        type: "object"
        example: {}
      medClass:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          type: "string"
      medCode: 
        type: "string"
      createdBy:
        type: "object"
        properties:
          userId:
            type: "string"
            example: "605059f391ad10274d40f663"
          utcDatetime:
            type: "string"
            format: "date-time"
      metadata:
        type: "object"
        properties:
          createdBy:
            type: "object"
            properties:
              userId:
                type: "string"
                example: "605059f391ad10274d40f663"
              utcDatetime:
                type: "string"
                format: "date-time"
          updatedBy:
            type: "string"
            example: "605059f391ad10274d40f663"
          version:
            type: "string"
            example: "1"
      packSize: 
        type: "string"
        example: ""
      prescriptionRequired:
        type: "boolean"
        default: false
      prodCategory:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          type: "string"
      promotion:
        type: object
        example: {}
      r52CatCode:
        type: "string"
      r52CatNo:
        type: "string"
      r52Locale:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          type: "string"
      r52SupplierCode:
        type: "string"
      status:
        type: "string"
        example: "Unavailable"
      suppCatNo:
        type: "string"
      suppliers:
        type: "object"
        example: {}
      tax:
        type: "object"
        properties:
          name:
            type: "string"
          category:
            type: "string"
          isIncluded: 
            type: "boolean"
            default: false
          IsTaxExempt: 
            type: "boolean"
            default: false
          percentage:
            type: "integer"
            format: "decimal"
          type:
            type: "string"
      type:
        type: "string"
      rating:
        type: "string"
      supplierName:
        type: "object"
        properties:
          eng:
            type: "string"
            example: "ALKEM"
      usdPrice:
        type: "long"
    xml:
      name: "Medication"



      # deliveryFee:
      #   type: "integer"
      #   format: "decimal"
      # isoCountry:
      #   type: "string"
       
      # lastProductSeq:
      #   type: "string"
       
      # supplierName:
      #   type: "object"
        
      # status:
      #   type: "boolean"
      #   default: false
      # usdPrice:
      #    type: "integer"
      #    format: "decimal"
      # metadata:
      #    type: "object"
   
  # Category:
  #   type: "object"
  #   properties:
  #     id:
  #       type: "integer"
  #       format: "int64"
  #     name:
  #       type: "string"
  #   xml:
  #     name: "Category"
  # User:
  #   type: "object"
  #   properties:
  #     id:
  #       type: "integer"
  #       format: "int64"
  #     username:
  #       type: "string"
  #     firstName:
  #       type: "string"
  #     lastName:
  #       type: "string"
  #     email:
  #       type: "string"
  #     password:
  #       type: "string"
  #     phone:
  #       type: "string"
  #     userStatus:
  #       type: "integer"
  #       format: "int32"
  #       description: "User Status"
  #   xml:
  #     name: "User"
  # Tag:
  #   type: "object"
  #   properties:
  #     id:
  #       type: "integer"
  #       format: "int64"
  #     name:
  #       type: "string"
  #   xml:
  #     name: "Tag"
 
  

 
 
        
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"